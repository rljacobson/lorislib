[package]
name        = "lorislib"
authors     = ["Robert Jacobson <rljacobson@gmail.com>"]
version     = "0.1.0"
edition     = "2021"
description = "A pattern matching engine that supports commutative and associative theories."
categories  = ["algorithms", "compilers", "parsing", "mathematics"]
keywords    = ["computer algebra", "Mathematica", "pattern matching", "term rewriting"]
homepage    = "http://www.github.com/rljacobson/lorislib"
repository  = "http://www.github.com/rljacobson/lorislib"
license     = "BSD"


publish = false


[dependencies]
strum        = {version = "0.26.3", features = ["derive"]}
strum_macros = "0.26.4"   # Generates variant-name-only enum.
lazy_static  = "1.4.0"
smallvec     = {version = "1.8.0", features = ["union"]} # Vecs on the stack in the matcher
regex        = {version = "1.6.0", default-features = false, features = ["perf", "std"]} # Lexer

aho-corasick    = "1.1.3"  # Lexer
string_cache    = "0.8"
#string-interner = "0.18.0"  # Used throughout
yansi           = "1.0.1"   # ANSI color support
fnv             = "1.0.7"   # FNV-1a hash, used internally for equality check of expressions.
num-integer     = "^0.1.44" # For num_integer::binomial. Version is sync'ed to rug's dependency.
bit-index       = "0.2.0"   # For permutation-generator
csv             = "1.1.6"   # Read in operator table.

# Arbitrary Precision Library
# Uses:
#   GMP  for integers and rational numbers,
#   MPFR for floating-point numbers, and
#   MPC  for complex numbers.
[dependencies.rug]
version = "1.26.1"
default-features = false
features = [
    "integer",
    "float",
    "rational",
    #    "complex",
    #    "rand",
    #    "serde"
]


[features]
default = ["strict-associativity"]
#default = []

# For matching in associative theories, associativity is "strict".
strict-associativity     = []
# Matching rules emulate the behavior of Mathematica, which does not give all matches. This feature is unimplemented.
mathematica_compatibiity = []

